{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_METHOD_ALPHABET","SORT_METHOD_LENGTH","App","useState","sortMethod","setSortMethod","reverse","setReverse","visibleGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","length","getPrepearedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,WACvBC,EAAqB,SA2BpB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAA2BC,EAAOL,EAAYE,GAC5C,IAAMI,EAAc,YAAOD,GAqB3B,OAnBIL,GACFM,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAeJ,UAGVI,EAOcM,CAAkBjB,EAAiBK,EAAYE,GAMpE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAeJ,IAE7BoB,QAAS,WACPf,EAAcL,GACdO,GAAW,IAPf,iCAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAeH,IAE7BmB,QAAS,WACPf,EAAcJ,GACdM,GAAW,IAPf,4BAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAab,IAEfc,QAtCc,WACpBb,GAAYD,IAgCR,qBAUA,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAc,IACdE,GAAW,IALf,sBAYDC,EAAaa,KAAI,SAAAC,GAAI,OACpB,6BACE,oBAAI,UAAQ,OAAZ,SAAoBA,aC1G9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca97014e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_METHOD_ALPHABET = 'Alphabet';\nconst SORT_METHOD_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, sortMethod, reverse) {\n  const prepearedGoods = [...goods];\n\n  if (sortMethod) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case SORT_METHOD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_METHOD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortMethod, setSortMethod] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPrepearedGoods(goodsFromServer, sortMethod, reverse);\n\n  const toggleReverse = () => {\n    setReverse(!reverse);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortMethod !== SORT_METHOD_ALPHABET,\n          })}\n          onClick={() => {\n            setSortMethod(SORT_METHOD_ALPHABET);\n            setReverse(false); // Reset reverse when changing sort method\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortMethod !== SORT_METHOD_LENGTH,\n          })}\n          onClick={() => {\n            setSortMethod(SORT_METHOD_LENGTH);\n            setReverse(false); // Reset reverse when changing sort method\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortMethod('');\n            setReverse(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      {visibleGoods.map(good => (\n        <ul>\n          <li data-cy=\"Good\">{good}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}