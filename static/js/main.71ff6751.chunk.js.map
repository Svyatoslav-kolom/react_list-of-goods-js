{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","displayedGoods","goods","isReversed","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA4BnB,IAAMC,EAAM,WACjB,MAAkCC,mBA5BT,IA4BzB,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWM,EAAc,EAAdA,WACtCC,EAAa,YAAOF,GAqB1B,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMT,GAAaU,EAAMV,GAElC,QACE,OAAO,MAKXM,GACFC,EAAcK,UAGTL,EAQHM,CAAiBlB,EAAiB,CAAEK,YAAWM,WAAYJ,IAmB/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAjBW,WACjBhB,EAAaL,IAUT,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAxBa,WACnBhB,EAAaJ,IAiBT,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QA3CQ,WACdd,GAAaD,IAoCT,sBAWEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAzDI,WACZhB,EAAa,IACbE,GAAY,IAoDN,sBAUJ,6BACGC,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.71ff6751.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_DEFAULT = '';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_FIELD_DEFAULT);\n  const [reversed, setReversed] = useState(false);\n\n  const displayedGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed: reversed });\n\n  const reset = () => {\n    setSortField('');\n    setReversed(false);\n  };\n\n  const reverse = () => {\n    setReversed(!reversed);\n  };\n\n  const sortByName = () => {\n    setSortField(SORT_FIELD_ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortField(SORT_FIELD_LENGTH);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {displayedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}